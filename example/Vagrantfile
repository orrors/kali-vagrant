# -*- mode: ruby -*-
# vi: set ft=ruby :

$provision = <<-SCRIPT
ln -s /vagrant ~/vagrant
sudo gunzip /usr/share/wordlists/rockyou.txt.gz
echo | sudo tee /etc/motd
SCRIPT

Vagrant.configure(2) do |config|
  config.vm.box = 'kali-2024'
  config.vm.define "example"
  config.vm.hostname = 'example'

  config.vm.provider 'libvirt' do |libvirt|
    libvirt.cpus = 8
    libvirt.memory = 8192
    libvirt.memorybacking :access, :mode => "shared"

    libvirt.graphics_type  = "spice"
    libvirt.nic_model_type = "virtio"
    libvirt.sound_type     = "ich6"
    libvirt.video_type     = "qxl"

    libvirt.channel :type  => 'spicevmc', :target_name => 'com.redhat.spice.0',     :target_type => 'virtio'
    libvirt.channel :type  => 'unix',     :target_name => 'org.qemu.guest_agent.0', :target_type => 'virtio'
    libvirt.random  :model => 'random'
  end

  # Forward X
  config.ssh.forward_agent = true
  config.ssh.forward_x11 = true

  # Open ports
  config.vm.network "forwarded_port", guest: 4444, host: 4444
  config.vm.network "forwarded_port", guest: 8000, host: 8000

  config.vm.provision "shell", inline: $provision, privileged: false

  config.vm.synced_folder "./", "/vagrant", type: "virtiofs"

  config.vm.provision 'shell', inline: 'cat /etc/os-release', name: 'os-release'
  config.vm.provision 'shell', inline: 'echo "machine-id is $(cat /etc/machine-id)"'
  config.vm.provision 'shell', inline: 'echo "machine firmware is $([ -d /sys/firmware/efi ] && echo UEFI || echo BIOS)"', name: 'machine firmware'
  config.vm.provision 'shell', inline: 'cat /etc/debian_version', name: 'debian_version'
  config.vm.provision 'shell', inline: 'sfdisk -l', name: 'disk partitions'
  config.vm.provision 'shell', inline: 'lsblk -x KNAME -o KNAME,SIZE,TRAN,SUBSYSTEMS,FSTYPE,UUID,LABEL,MODEL,SERIAL', name: 'block devices'
  config.vm.provision 'shell', inline: 'df -h', name: 'disk space usage'
  config.vm.provision 'shell', inline: "dpkg-query -W -f='${binary:Package}\\n' | sort >/vagrant/#{config.vm.box}-packages.txt", name: 'package list'
end
